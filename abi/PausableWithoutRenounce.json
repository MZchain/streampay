{
  "contractName": "PausableWithoutRenounce",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "PauserRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addPauser",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isPauser",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"PauserRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addPauser\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isPauser\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Sablier\",\"methods\":{\"initialize(address)\":{\"details\":\"Initializes the contract in unpaused state. Assigns the Pauser role to the deployer.\"},\"pause()\":{\"details\":\"Called by a pauser to pause, triggers stopped state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"unpause()\":{\"details\":\"Called by a pauser to unpause, returns to normal state.\"}},\"title\":\"PausableWithoutRenounce\"},\"userdoc\":{\"methods\":{},\"notice\":\"Fork of OpenZeppelin's Pausable, a contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account, but with the `renouncePauser` function removed to avoid fat-finger errors. We inherit from `Context` to keep this contract compatible with the Gas Station Network. See https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/master/contracts/lifecycle/Pausable.sol See https://docs.openzeppelin.com/contracts/2.x/gsn#_msg_sender_and_msg_data\"}},\"settings\":{\"compilationTarget\":{\"/F/streampayv4/contracts/tools-contracts/PausableWithoutRenounce.sol\":\"PausableWithoutRenounce\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/F/streampayv4/contracts/tools-contracts/PausableWithoutRenounce.sol\":{\"keccak256\":\"0xc045affd9ae732e1bfa46479955b99fb7be2377854c8056e237c5bd1cf158b6e\",\"urls\":[\"bzz-raw://9974d3b5f0df4e5be73e47445907054f221d933a3c56886b6e87a00e08d64457\",\"dweb:/ipfs/QmPfzbA8UyWNHE8MD243SGtgoYMzfZ2dSZz5FHdc5Erzbx\"]},\"/F/streampayv4/contracts/tools-contracts/PauserRoleWithoutRenounce.sol\":{\"keccak256\":\"0x2874632d25e228264db91b817196fa9f6f09883f56ccf7d73e722e703c1a4bd8\",\"urls\":[\"bzz-raw://06cf2630ae724f46ec5e6017a1f44b2fde19615568a83cf01d50b7e1d8a3d4a2\",\"dweb:/ipfs/QmYWnDhE1ZsttnK6hQouKLNdWRhnszZN2vF4Tg8D5zeauy\"]},\"/F/streampayv4/node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\":{\"keccak256\":\"0xb8701b8b7873042ef4db55497f858cd3b99c7a00f0f59474a7cbb5d6c019df63\",\"urls\":[\"bzz-raw://247aac80b1ac189bc62ad8187baa42a6fad7501c175d02f0198c9e4467dc8a9a\",\"dweb:/ipfs/Qmc3YwfagHPa89oNLG67yLL5mZBepH8zmWBqANFbWDJZQ3\"]},\"/F/streampayv4/node_modules/@openzeppelin/contracts-ethereum-package/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"/F/streampayv4/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol\":{\"keccak256\":\"0xf79d9851c085aa8412e87d7a26d3485488fe12538ecb4e317ce41fc1f2c3a16a\",\"urls\":[\"bzz-raw://6af1a35ad6aed2169ce9f44095438b3192cd6066903908f769d5c49a06a0caf8\",\"dweb:/ipfs/QmaH41CwJ7WrMQwSnbfCKuL2pd8bxF7sbGSLPZb6JaHBFF\"]}},\"version\":1}",
  "bytecode": "0x6080604052610688806100136000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a1461006757806346fbf68e146100715780635c975abb146100ab57806382dc1ec4146100b35780638456cb59146100d9578063c4d66de8146100e1575b600080fd5b61006f610107565b005b6100976004803603602081101561008757600080fd5b50356001600160a01b03166101f0565b604080519115158252519081900360200190f35b610097610209565b61006f600480360360208110156100c957600080fd5b50356001600160a01b0316610212565b61006f610264565b61006f600480360360208110156100f757600080fd5b50356001600160a01b031661032b565b6101176101126103e1565b6101f0565b6101525760405162461bcd60e51b81526004018080602001828103825260308152602001806105d46030913960400191505060405180910390fd5b60665460ff166101a0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6066805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6101d36103e1565b604080516001600160a01b039092168252519081900360200190a1565b600061020360338363ffffffff6103e516565b92915050565b60665460ff1690565b61021d6101126103e1565b6102585760405162461bcd60e51b81526004018080602001828103825260308152602001806105d46030913960400191505060405180910390fd5b6102618161044c565b50565b61026f6101126103e1565b6102aa5760405162461bcd60e51b81526004018080602001828103825260308152602001806105d46030913960400191505060405180910390fd5b60665460ff16156102f5576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6066805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586101d36103e1565b600054610100900460ff16806103445750610344610494565b80610352575060005460ff16155b61038d5760405162461bcd60e51b815260040180806020018281038252602e815260200180610626602e913960400191505060405180910390fd5b600054610100900460ff161580156103b8576000805460ff1961ff0019909116610100171660011790555b6103c18261049a565b6066805460ff1916905580156103dd576000805461ff00191690555b5050565b3390565b60006001600160a01b03821661042c5760405162461bcd60e51b81526004018080602001828103825260228152602001806106046022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61045d60338263ffffffff61055216565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b303b1590565b600054610100900460ff16806104b357506104b3610494565b806104c1575060005460ff16155b6104fc5760405162461bcd60e51b815260040180806020018281038252602e815260200180610626602e913960400191505060405180910390fd5b600054610100900460ff16158015610527576000805460ff1961ff0019909116610100171660011790555b610530826101f0565b61053d5761053d8261044c565b80156103dd576000805461ff00191690555050565b61055c82826103e5565b156105ae576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820b1bfa219f01055c921f9b853d9f88f510aaf34404cf36348b483b13924e9fdf564736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80633f4ba83a1461006757806346fbf68e146100715780635c975abb146100ab57806382dc1ec4146100b35780638456cb59146100d9578063c4d66de8146100e1575b600080fd5b61006f610107565b005b6100976004803603602081101561008757600080fd5b50356001600160a01b03166101f0565b604080519115158252519081900360200190f35b610097610209565b61006f600480360360208110156100c957600080fd5b50356001600160a01b0316610212565b61006f610264565b61006f600480360360208110156100f757600080fd5b50356001600160a01b031661032b565b6101176101126103e1565b6101f0565b6101525760405162461bcd60e51b81526004018080602001828103825260308152602001806105d46030913960400191505060405180910390fd5b60665460ff166101a0576040805162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015290519081900360640190fd5b6066805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6101d36103e1565b604080516001600160a01b039092168252519081900360200190a1565b600061020360338363ffffffff6103e516565b92915050565b60665460ff1690565b61021d6101126103e1565b6102585760405162461bcd60e51b81526004018080602001828103825260308152602001806105d46030913960400191505060405180910390fd5b6102618161044c565b50565b61026f6101126103e1565b6102aa5760405162461bcd60e51b81526004018080602001828103825260308152602001806105d46030913960400191505060405180910390fd5b60665460ff16156102f5576040805162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015290519081900360640190fd5b6066805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586101d36103e1565b600054610100900460ff16806103445750610344610494565b80610352575060005460ff16155b61038d5760405162461bcd60e51b815260040180806020018281038252602e815260200180610626602e913960400191505060405180910390fd5b600054610100900460ff161580156103b8576000805460ff1961ff0019909116610100171660011790555b6103c18261049a565b6066805460ff1916905580156103dd576000805461ff00191690555b5050565b3390565b60006001600160a01b03821661042c5760405162461bcd60e51b81526004018080602001828103825260228152602001806106046022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61045d60338263ffffffff61055216565b6040516001600160a01b038216907f6719d08c1888103bea251a4ed56406bd0c3e69723c8a1686e017e7bbe159b6f890600090a250565b303b1590565b600054610100900460ff16806104b357506104b3610494565b806104c1575060005460ff16155b6104fc5760405162461bcd60e51b815260040180806020018281038252602e815260200180610626602e913960400191505060405180910390fd5b600054610100900460ff16158015610527576000805460ff1961ff0019909116610100171660011790555b610530826101f0565b61053d5761053d8261044c565b80156103dd576000805461ff00191690555050565b61055c82826103e5565b156105ae576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff1916600117905556fe506175736572526f6c653a2063616c6c657220646f6573206e6f742068617665207468652050617573657220726f6c65526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373436f6e747261637420696e7374616e63652068617320616c7265616479206265656e20696e697469616c697a6564a265627a7a72315820b1bfa219f01055c921f9b853d9f88f510aaf34404cf36348b483b13924e9fdf564736f6c63430005100032",
  "sourceMap": "876:1665:14:-;;;;;;;;;",
  "deployedSourceMap": "876:1665:14:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;876:1665:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2418:120;;;:::i;:::-;;1254:109:15;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1254:109:15;-1:-1:-1;;;;;1254:109:15;;:::i;:::-;;;;;;;;;;;;;;;;;;1625:78:14;;;:::i;1371:92:15:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1371:92:15;-1:-1:-1;;;;;1371:92:15;;:::i;2205:118:14:-;;;:::i;1381:144::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1381:144:14;-1:-1:-1;;;;;1381:144:14;;:::i;2418:120::-;1151:22:15;1160:12;:10;:12::i;:::-;1151:8;:22::i;:::-;1143:83;;;;-1:-1:-1;;;1143:83:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2061:7:14;;;;2053:40;;;;;-1:-1:-1;;;2053:40:14;;;;;;;;;;;;-1:-1:-1;;;2053:40:14;;;;;;;;;;;;;;;2477:7;:15;;-1:-1:-1;;2477:15:14;;;2508:22;2517:12;:10;:12::i;:::-;2508:22;;;-1:-1:-1;;;;;2508:22:14;;;;;;;;;;;;;;2418:120::o;1254:109:15:-;1310:4;1334:21;:8;1347:7;1334:21;:12;:21;:::i;:::-;1327:28;1254:109;-1:-1:-1;;1254:109:15:o;1625:78:14:-;1688:7;;;;1625:78;:::o;1371:92:15:-;1151:22;1160:12;:10;:12::i;1151:22::-;1143:83;;;;-1:-1:-1;;;1143:83:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1436:19;1447:7;1436:10;:19::i;:::-;1371:92;:::o;2205:118:14:-;1151:22:15;1160:12;:10;:12::i;1151:22::-;1143:83;;;;-1:-1:-1;;;1143:83:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1862:7:14;;;;1861:8;1853:37;;;;;-1:-1:-1;;;1853:37:14;;;;;;;;;;;;-1:-1:-1;;;1853:37:14;;;;;;;;;;;;;;;2265:7;:14;;-1:-1:-1;;2265:14:14;2275:4;2265:14;;;2295:20;2302:12;:10;:12::i;1381:144::-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;1447:44:14;1484:6;1447:36;:44::i;:::-;1502:7;:15;;-1:-1:-1;;1502:15:14;;;1264:55:20;;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;1264:55;1381:144:14;;:::o;862:96:16:-;941:10;862:96;:::o;779:200:17:-;851:4;-1:-1:-1;;;;;875:21:17;;867:68;;;;-1:-1:-1;;;867:68:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:17;:11;:20;;;;;;;;;;;;;;;779:200::o;1471:122:15:-;1528:21;:8;1541:7;1528:21;:12;:21;:::i;:::-;1565:20;;-1:-1:-1;;;;;1565:20:15;;;;;;;;1471:122;:::o;1409:467:20:-;1842:7;1830:20;1864:7;1409:467;:::o;961:141:15:-;1024:12:20;;;;;;;;:31;;;1040:15;:13;:15::i;:::-;1024:47;;;-1:-1:-1;1060:11:20;;;;1059:12;1024:47;1016:106;;;;-1:-1:-1;;;1016:106:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1129:19;1152:12;;;;;;1151:13;1170:80;;;;1198:12;:19;;-1:-1:-1;;;;1198:19:20;;;;;1225:18;1213:4;1225:18;;;1170:80;1032:16:15;1041:6;1032:8;:16::i;:::-;1027:68;;1065:18;1076:6;1065:10;:18::i;:::-;1268:14:20;1264:55;;;1307:5;1292:20;;-1:-1:-1;;1292:20:20;;;961:141:15;;:::o;260:175:17:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:17;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:17;424:4;401:27;;;260:175::o",
  "source": "pragma solidity 0.5.16;\r\n\r\nimport \"../../node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol\";\r\nimport \"../../node_modules/@openzeppelin/upgrades/contracts/Initializable.sol\";\r\n\r\nimport \"./PauserRoleWithoutRenounce.sol\";\r\n\r\n/**\r\n * @title PausableWithoutRenounce\r\n * @author Sablier\r\n * @notice Fork of OpenZeppelin's Pausable, a contract module which allows children to implement an\r\n *  emergency stop mechanism that can be triggered by an authorized account, but with the `renouncePauser`\r\n *  function removed to avoid fat-finger errors.\r\n *  We inherit from `Context` to keep this contract compatible with the Gas Station Network.\r\n * See https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/master/contracts/lifecycle/Pausable.sol\r\n * See https://docs.openzeppelin.com/contracts/2.x/gsn#_msg_sender_and_msg_data\r\n */\r\ncontract PausableWithoutRenounce is Initializable, Context, PauserRoleWithoutRenounce {\r\n    /**\r\n     * @dev Emitted when the pause is triggered by a pauser (`account`).\r\n     */\r\n    event Paused(address account);\r\n\r\n    /**\r\n     * @dev Emitted when the pause is lifted by a pauser (`account`).\r\n     */\r\n    event Unpaused(address account);\r\n\r\n    bool private _paused;\r\n\r\n    /**\r\n     * @dev Initializes the contract in unpaused state. Assigns the Pauser role\r\n     * to the deployer.\r\n     */\r\n    function initialize(address sender) public initializer {\r\n        PauserRoleWithoutRenounce.initialize(sender);\r\n        _paused = false;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns true if the contract is paused, and false otherwise.\r\n     */\r\n    function paused() public view returns (bool) {\r\n        return _paused;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is not paused.\r\n     */\r\n    modifier whenNotPaused() {\r\n        require(!_paused, \"Pausable: paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Modifier to make a function callable only when the contract is paused.\r\n     */\r\n    modifier whenPaused() {\r\n        require(_paused, \"Pausable: not paused\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Called by a pauser to pause, triggers stopped state.\r\n     */\r\n    function pause() public onlyPauser whenNotPaused {\r\n        _paused = true;\r\n        emit Paused(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Called by a pauser to unpause, returns to normal state.\r\n     */\r\n    function unpause() public onlyPauser whenPaused {\r\n        _paused = false;\r\n        emit Unpaused(_msgSender());\r\n    }\r\n}\r\n",
  "sourcePath": "F:\\streampayv4\\contracts\\tools-contracts\\PausableWithoutRenounce.sol",
  "ast": {
    "absolutePath": "/F/streampayv4/contracts/tools-contracts/PausableWithoutRenounce.sol",
    "exportedSymbols": {
      "PausableWithoutRenounce": [
        8127
      ]
    },
    "id": 8128,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8028,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/F/streampayv4/node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
        "file": "../../node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
        "id": 8029,
        "nodeType": "ImportDirective",
        "scope": 8128,
        "sourceUnit": 8272,
        "src": "27:95:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/streampayv4/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "../../node_modules/@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 8030,
        "nodeType": "ImportDirective",
        "scope": 8128,
        "sourceUnit": 8526,
        "src": "124:79:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/streampayv4/contracts/tools-contracts/PauserRoleWithoutRenounce.sol",
        "file": "./PauserRoleWithoutRenounce.sol",
        "id": 8031,
        "nodeType": "ImportDirective",
        "scope": 8128,
        "sourceUnit": 8242,
        "src": "207:41:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8032,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8525,
              "src": "912:13:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8525",
                "typeString": "contract Initializable"
              }
            },
            "id": 8033,
            "nodeType": "InheritanceSpecifier",
            "src": "912:13:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8034,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8271,
              "src": "927:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$8271",
                "typeString": "contract Context"
              }
            },
            "id": 8035,
            "nodeType": "InheritanceSpecifier",
            "src": "927:7:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8036,
              "name": "PauserRoleWithoutRenounce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8241,
              "src": "936:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PauserRoleWithoutRenounce_$8241",
                "typeString": "contract PauserRoleWithoutRenounce"
              }
            },
            "id": 8037,
            "nodeType": "InheritanceSpecifier",
            "src": "936:25:14"
          }
        ],
        "contractDependencies": [
          8241,
          8271,
          8525
        ],
        "contractKind": "contract",
        "documentation": "@title PausableWithoutRenounce\n@author Sablier\n@notice Fork of OpenZeppelin's Pausable, a contract module which allows children to implement an\n emergency stop mechanism that can be triggered by an authorized account, but with the `renouncePauser`\n function removed to avoid fat-finger errors.\n We inherit from `Context` to keep this contract compatible with the Gas Station Network.\nSee https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/master/contracts/lifecycle/Pausable.sol\nSee https://docs.openzeppelin.com/contracts/2.x/gsn#_msg_sender_and_msg_data",
        "fullyImplemented": true,
        "id": 8127,
        "linearizedBaseContracts": [
          8127,
          8241,
          8271,
          8525
        ],
        "name": "PausableWithoutRenounce",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is triggered by a pauser (`account`).",
            "id": 8041,
            "name": "Paused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8039,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "1074:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:17:14"
            },
            "src": "1061:30:14"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is lifted by a pauser (`account`).",
            "id": 8045,
            "name": "Unpaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8043,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "1203:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:17:14"
            },
            "src": "1188:32:14"
          },
          {
            "constant": false,
            "id": 8047,
            "name": "_paused",
            "nodeType": "VariableDeclaration",
            "scope": 8127,
            "src": "1228:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8046,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1228:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8064,
              "nodeType": "Block",
              "src": "1436:89:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8057,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8049,
                        "src": "1484:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8054,
                        "name": "PauserRoleWithoutRenounce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8241,
                        "src": "1447:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PauserRoleWithoutRenounce_$8241_$",
                          "typeString": "type(contract PauserRoleWithoutRenounce)"
                        }
                      },
                      "id": 8056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8167,
                      "src": "1447:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8059,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:44:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8060,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8047,
                      "src": "1502:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1512:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1502:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8063,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:15:14"
                }
              ]
            },
            "documentation": "@dev Initializes the contract in unpaused state. Assigns the Pauser role\nto the deployer.",
            "id": 8065,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8051,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8506,
                  "src": "1424:11:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:11:14"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "1401:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1400:16:14"
            },
            "returnParameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:14"
            },
            "scope": 8127,
            "src": "1381:144:14",
            "stateMutability": "nonpayable",
            "superFunction": 8167,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8072,
              "nodeType": "Block",
              "src": "1670:33:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8070,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8047,
                    "src": "1688:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8069,
                  "id": 8071,
                  "nodeType": "Return",
                  "src": "1681:14:14"
                }
              ]
            },
            "documentation": "@dev Returns true if the contract is paused, and false otherwise.",
            "id": 8073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:2:14"
            },
            "returnParameters": {
              "id": 8069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8068,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8073,
                  "src": "1664:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8067,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:6:14"
            },
            "scope": 8127,
            "src": "1625:78:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8082,
              "nodeType": "Block",
              "src": "1842:68:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1861:8:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 8076,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8047,
                          "src": "1862:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 8078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1871:18:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 8075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8543,
                        8544
                      ],
                      "referencedDeclaration": 8544,
                      "src": "1853:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:37:14"
                },
                {
                  "id": 8081,
                  "nodeType": "PlaceholderStatement",
                  "src": "1901:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 8083,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:2:14"
            },
            "src": "1817:93:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8091,
              "nodeType": "Block",
              "src": "2042:71:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8086,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8047,
                        "src": "2061:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 8087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:22:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 8085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8543,
                        8544
                      ],
                      "referencedDeclaration": 8544,
                      "src": "2053:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8089,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:40:14"
                },
                {
                  "id": 8090,
                  "nodeType": "PlaceholderStatement",
                  "src": "2104:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 8092,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2039:2:14"
            },
            "src": "2020:93:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8108,
              "nodeType": "Block",
              "src": "2254:69:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8099,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8047,
                      "src": "2265:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 8100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2275:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2265:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8102,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:14:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8104,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8259,
                          "src": "2302:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 8105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8103,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8041,
                      "src": "2295:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8107,
                  "nodeType": "EmitStatement",
                  "src": "2290:25:14"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to pause, triggers stopped state.",
            "id": 8109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8095,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8094,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8179,
                  "src": "2229:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:10:14"
              },
              {
                "arguments": null,
                "id": 8097,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8096,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8083,
                  "src": "2240:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2240:13:14"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2219:2:14"
            },
            "returnParameters": {
              "id": 8098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:0:14"
            },
            "scope": 8127,
            "src": "2205:118:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8125,
              "nodeType": "Block",
              "src": "2466:72:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8116,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8047,
                      "src": "2477:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2487:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2477:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8119,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:15:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8121,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8259,
                          "src": "2517:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 8122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8120,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8045,
                      "src": "2508:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8124,
                  "nodeType": "EmitStatement",
                  "src": "2503:27:14"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to unpause, returns to normal state.",
            "id": 8126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8112,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8111,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8179,
                  "src": "2444:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2444:10:14"
              },
              {
                "arguments": null,
                "id": 8114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8113,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8092,
                  "src": "2455:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2455:10:14"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:2:14"
            },
            "returnParameters": {
              "id": 8115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2466:0:14"
            },
            "scope": 8127,
            "src": "2418:120:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8128,
        "src": "876:1665:14"
      }
    ],
    "src": "0:2543:14"
  },
  "legacyAST": {
    "absolutePath": "/F/streampayv4/contracts/tools-contracts/PausableWithoutRenounce.sol",
    "exportedSymbols": {
      "PausableWithoutRenounce": [
        8127
      ]
    },
    "id": 8128,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 8028,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:14"
      },
      {
        "absolutePath": "/F/streampayv4/node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
        "file": "../../node_modules/@openzeppelin/contracts-ethereum-package/contracts/GSN/Context.sol",
        "id": 8029,
        "nodeType": "ImportDirective",
        "scope": 8128,
        "sourceUnit": 8272,
        "src": "27:95:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/streampayv4/node_modules/@openzeppelin/upgrades/contracts/Initializable.sol",
        "file": "../../node_modules/@openzeppelin/upgrades/contracts/Initializable.sol",
        "id": 8030,
        "nodeType": "ImportDirective",
        "scope": 8128,
        "sourceUnit": 8526,
        "src": "124:79:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/F/streampayv4/contracts/tools-contracts/PauserRoleWithoutRenounce.sol",
        "file": "./PauserRoleWithoutRenounce.sol",
        "id": 8031,
        "nodeType": "ImportDirective",
        "scope": 8128,
        "sourceUnit": 8242,
        "src": "207:41:14",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8032,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8525,
              "src": "912:13:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$8525",
                "typeString": "contract Initializable"
              }
            },
            "id": 8033,
            "nodeType": "InheritanceSpecifier",
            "src": "912:13:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8034,
              "name": "Context",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8271,
              "src": "927:7:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Context_$8271",
                "typeString": "contract Context"
              }
            },
            "id": 8035,
            "nodeType": "InheritanceSpecifier",
            "src": "927:7:14"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 8036,
              "name": "PauserRoleWithoutRenounce",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8241,
              "src": "936:25:14",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PauserRoleWithoutRenounce_$8241",
                "typeString": "contract PauserRoleWithoutRenounce"
              }
            },
            "id": 8037,
            "nodeType": "InheritanceSpecifier",
            "src": "936:25:14"
          }
        ],
        "contractDependencies": [
          8241,
          8271,
          8525
        ],
        "contractKind": "contract",
        "documentation": "@title PausableWithoutRenounce\n@author Sablier\n@notice Fork of OpenZeppelin's Pausable, a contract module which allows children to implement an\n emergency stop mechanism that can be triggered by an authorized account, but with the `renouncePauser`\n function removed to avoid fat-finger errors.\n We inherit from `Context` to keep this contract compatible with the Gas Station Network.\nSee https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/master/contracts/lifecycle/Pausable.sol\nSee https://docs.openzeppelin.com/contracts/2.x/gsn#_msg_sender_and_msg_data",
        "fullyImplemented": true,
        "id": 8127,
        "linearizedBaseContracts": [
          8127,
          8241,
          8271,
          8525
        ],
        "name": "PausableWithoutRenounce",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is triggered by a pauser (`account`).",
            "id": 8041,
            "name": "Paused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8040,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8039,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8041,
                  "src": "1074:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8038,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1074:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1073:17:14"
            },
            "src": "1061:30:14"
          },
          {
            "anonymous": false,
            "documentation": "@dev Emitted when the pause is lifted by a pauser (`account`).",
            "id": 8045,
            "name": "Unpaused",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8043,
                  "indexed": false,
                  "name": "account",
                  "nodeType": "VariableDeclaration",
                  "scope": 8045,
                  "src": "1203:15:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8042,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1202:17:14"
            },
            "src": "1188:32:14"
          },
          {
            "constant": false,
            "id": 8047,
            "name": "_paused",
            "nodeType": "VariableDeclaration",
            "scope": 8127,
            "src": "1228:20:14",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 8046,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1228:4:14",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 8064,
              "nodeType": "Block",
              "src": "1436:89:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8057,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8049,
                        "src": "1484:6:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 8054,
                        "name": "PauserRoleWithoutRenounce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8241,
                        "src": "1447:25:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_PauserRoleWithoutRenounce_$8241_$",
                          "typeString": "type(contract PauserRoleWithoutRenounce)"
                        }
                      },
                      "id": 8056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8167,
                      "src": "1447:36:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:44:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8059,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:44:14"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8060,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8047,
                      "src": "1502:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1512:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1502:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8063,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:15:14"
                }
              ]
            },
            "documentation": "@dev Initializes the contract in unpaused state. Assigns the Pauser role\nto the deployer.",
            "id": 8065,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8052,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8051,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8506,
                  "src": "1424:11:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1424:11:14"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8049,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 8065,
                  "src": "1401:14:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 8048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1401:7:14",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1400:16:14"
            },
            "returnParameters": {
              "id": 8053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1436:0:14"
            },
            "scope": 8127,
            "src": "1381:144:14",
            "stateMutability": "nonpayable",
            "superFunction": 8167,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8072,
              "nodeType": "Block",
              "src": "1670:33:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8070,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 8047,
                    "src": "1688:7:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 8069,
                  "id": 8071,
                  "nodeType": "Return",
                  "src": "1681:14:14"
                }
              ]
            },
            "documentation": "@dev Returns true if the contract is paused, and false otherwise.",
            "id": 8073,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8066,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1640:2:14"
            },
            "returnParameters": {
              "id": 8069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 8068,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 8073,
                  "src": "1664:4:14",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 8067,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:4:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1663:6:14"
            },
            "scope": 8127,
            "src": "1625:78:14",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8082,
              "nodeType": "Block",
              "src": "1842:68:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1861:8:14",
                        "subExpression": {
                          "argumentTypes": null,
                          "id": 8076,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8047,
                          "src": "1862:7:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 8078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1871:18:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 8075,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8543,
                        8544
                      ],
                      "referencedDeclaration": 8544,
                      "src": "1853:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1853:37:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8080,
                  "nodeType": "ExpressionStatement",
                  "src": "1853:37:14"
                },
                {
                  "id": 8081,
                  "nodeType": "PlaceholderStatement",
                  "src": "1901:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is not paused.",
            "id": 8083,
            "name": "whenNotPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8074,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1839:2:14"
            },
            "src": "1817:93:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8091,
              "nodeType": "Block",
              "src": "2042:71:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 8086,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8047,
                        "src": "2061:7:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 8087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2070:22:14",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 8085,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8543,
                        8544
                      ],
                      "referencedDeclaration": 8544,
                      "src": "2053:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 8088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2053:40:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8089,
                  "nodeType": "ExpressionStatement",
                  "src": "2053:40:14"
                },
                {
                  "id": 8090,
                  "nodeType": "PlaceholderStatement",
                  "src": "2104:1:14"
                }
              ]
            },
            "documentation": "@dev Modifier to make a function callable only when the contract is paused.",
            "id": 8092,
            "name": "whenPaused",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 8084,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2039:2:14"
            },
            "src": "2020:93:14",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 8108,
              "nodeType": "Block",
              "src": "2254:69:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8099,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8047,
                      "src": "2265:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 8100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2275:4:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2265:14:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8102,
                  "nodeType": "ExpressionStatement",
                  "src": "2265:14:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8104,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8259,
                          "src": "2302:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 8105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2302:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8103,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8041,
                      "src": "2295:6:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2295:20:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8107,
                  "nodeType": "EmitStatement",
                  "src": "2290:25:14"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to pause, triggers stopped state.",
            "id": 8109,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8095,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8094,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8179,
                  "src": "2229:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2229:10:14"
              },
              {
                "arguments": null,
                "id": 8097,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8096,
                  "name": "whenNotPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8083,
                  "src": "2240:13:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2240:13:14"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2219:2:14"
            },
            "returnParameters": {
              "id": 8098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2254:0:14"
            },
            "scope": 8127,
            "src": "2205:118:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 8125,
              "nodeType": "Block",
              "src": "2466:72:14",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 8118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 8116,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8047,
                      "src": "2477:7:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 8117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2487:5:14",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2477:15:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 8119,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:15:14"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 8121,
                          "name": "_msgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 8259,
                          "src": "2517:10:14",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
                            "typeString": "function () view returns (address payable)"
                          }
                        },
                        "id": 8122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2517:12:14",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 8120,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8045,
                      "src": "2508:8:14",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 8123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:22:14",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 8124,
                  "nodeType": "EmitStatement",
                  "src": "2503:27:14"
                }
              ]
            },
            "documentation": "@dev Called by a pauser to unpause, returns to normal state.",
            "id": 8126,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 8112,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8111,
                  "name": "onlyPauser",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8179,
                  "src": "2444:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2444:10:14"
              },
              {
                "arguments": null,
                "id": 8114,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 8113,
                  "name": "whenPaused",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 8092,
                  "src": "2455:10:14",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2455:10:14"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 8110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2434:2:14"
            },
            "returnParameters": {
              "id": 8115,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2466:0:14"
            },
            "scope": 8127,
            "src": "2418:120:14",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 8128,
        "src": "876:1665:14"
      }
    ],
    "src": "0:2543:14"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-15T09:46:43.498Z",
  "devdoc": {
    "author": "Sablier",
    "methods": {
      "initialize(address)": {
        "details": "Initializes the contract in unpaused state. Assigns the Pauser role to the deployer."
      },
      "pause()": {
        "details": "Called by a pauser to pause, triggers stopped state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      },
      "unpause()": {
        "details": "Called by a pauser to unpause, returns to normal state."
      }
    },
    "title": "PausableWithoutRenounce"
  },
  "userdoc": {
    "methods": {},
    "notice": "Fork of OpenZeppelin's Pausable, a contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account, but with the `renouncePauser` function removed to avoid fat-finger errors. We inherit from `Context` to keep this contract compatible with the Gas Station Network. See https://github.com/OpenZeppelin/openzeppelin-contracts-ethereum-package/blob/master/contracts/lifecycle/Pausable.sol See https://docs.openzeppelin.com/contracts/2.x/gsn#_msg_sender_and_msg_data"
  }
}